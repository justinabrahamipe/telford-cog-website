// Telford Church of God - Database Schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("PRISMA_DATABASE_URL")
}

// Admin authentication
model AdminSession {
  id           Int      @id @default(autoincrement())
  sessionToken String   @unique @map("session_token")
  expiresAt    DateTime @map("expires_at")
  createdAt    DateTime @default(now()) @map("created_at")

  @@map("admin_sessions")
}

// Admin settings (stores password and other config)
model AdminSettings {
  id        Int      @id @default(autoincrement())
  key       String   @unique
  value     String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("admin_settings")
}

// Gallery images
model GalleryImage {
  id           Int      @id @default(autoincrement())
  imageUrl     String   @map("image_url")
  thumbnailUrl String?  @map("thumbnail_url")
  title        String   @default("")
  description  String   @default("")
  orderIndex   Int      @default(0) @map("order_index")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("gallery_images")
}

// Sermons
model Sermon {
  id           Int      @id @default(autoincrement())
  title        String
  preacher     String   @default("")
  date         DateTime
  videoUrl     String   @default("") @map("video_url")
  description  String   @default("")
  thumbnailUrl String   @default("") @map("thumbnail_url")
  createdAt    DateTime @default(now()) @map("created_at")
  updatedAt    DateTime @updatedAt @map("updated_at")

  @@map("sermons")
}

// Page content (for editable pages)
model PageContent {
  id        Int      @id @default(autoincrement())
  slug      String   @unique
  title     String
  content   Json     // Stores flexible JSON content
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("page_content")
}

// Leaders (pastors and officials)
model Leader {
  id          Int      @id @default(autoincrement())
  name        String
  designation String
  description String?
  imageUrl    String?  @map("image_url")
  type        String   @default("official") // "main" or "official"
  orderIndex  Int      @default(0) @map("order_index")
  facebookUrl String?  @map("facebook_url")
  whatsappUrl String?  @map("whatsapp_url")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("leaders")
}

// Contact methods
model Contact {
  id          Int      @id @default(autoincrement())
  title       String   // "Email", "Call", "WhatsApp", etc.
  description String?  // Optional description (e.g., person's name)
  details     String   // The actual email/phone/etc to display
  iconType    String   @default("email") @map("icon_type") // "email", "phone", "whatsapp", "location", "facebook", etc.
  actionUrl   String   @map("action_url") // The full URL (mailto:, tel:, https://)
  colorTheme  String   @default("primary") @map("color_theme") // "primary", "secondary", "success", "info", "warning", "error"
  orderIndex  Int      @default(0) @map("order_index")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  @@map("contacts")
}

// Footer settings (social links, verse, location)
model FooterSettings {
  id        Int      @id @default(autoincrement())
  key       String   @unique // "facebook_url", "whatsapp_url", "youtube_url", "instagram_url", "verse_text", "verse_reference", "address_line1", "address_line2", "address_line3", "address_line4", "google_maps_url"
  value     String   // The actual URL or text
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("footer_settings")
}
